Средствами SQL запросов можно выбирать и обрабатывать данные не только из одной таблицы, но из нескольких связанных таблиц. 
В данном уроке мы рассмотрим способы соединения таблиц:
связь между таблицами «один ко многим»;
связь между таблицами «многие ко многим»;
создание таблицы с внешними ключами;
действия при удалении записи главной таблицы;
заполнение таблицы с внешними ключами;
добавление данных в таблицу с внешними ключами.
Связь «один ко многим»

Рассмотрим таблицу book(в ней столбец author переименован в name_author):

book_id	title	name_author	price	amount
1	Мастер и Маргарита	Булгаков М.А.	670.99	3
2	Белая гвардия	Булгаков М.А.	540.50	5
3	Идиот	Достоевский Ф.М.	460.00	10
4	Братья Карамазовы	Достоевский Ф.М.	799.01	2
5	Стихотворения и поэмы	Есенин С.А.	650.00	15
Связь «один ко многим» имеет место, когда одной записи главной таблицы соответствует несколько записей связанной таблицы, 
а каждой записи связанной таблицы соответствует только одна запись главной таблицы. 
Этапы реализации связи «один ко многим» на примере:
1. Создать таблицу author,  в которую включить уникальных авторов книг, хранящихся на складе.
2. Обе таблицы должны содержать первичный ключ (PK): book_id - в таблице  book,  author_id -  в таблице author.
3. Включить в таблицу book связанный столбец (внешний ключ, FOREIGN KEY), соответствующий по имени и типу ключевому 
столбцу главной таблицы (в нашем случае это столбец author_id)

Есть взаимосвязи двух объектов:

- один определенный объект  ———>  много объектов

- много объектов <———> много объектов

Создание таблицы с внешними ключами
При создании зависимой таблицы (таблицы, которая содержит внешние ключи) необходимо учитывать, что :
каждый внешний ключ должен иметь такой же тип данных, как связанное поле главной таблицы (в наших примерах это INT);
необходимо указать главную для нее таблицу и столбец, по которому осуществляется связь:
FOREIGN KEY (связанное_поле_зависимой_таблицы)  
REFERENCES главная_таблица (связанное_поле_главной_таблицы)
По умолчанию любой столбец, кроме ключевого, может содержать значение NULL. При создании таблицы это можно переопределить,  
используя  ограничение NOT NULL для этого столбца:

CREATE TABLE таблица (
    столбец_1 INT NOT NULL, 
    столбец_2 VARCHAR(10) 
);
 В созданной таблице в столбец_1 не может содержать пустое значение, а столбец_2 - может.

Для внешних ключей рекомендуется устанавливать ограничение NOT NULL (если это совместимо с другими опциями, которые будут рассмотрены в следующем шаге).

 Пример
Создать таблицу book следующей структуры:
Поле	Тип, описание	Связи
book_id	INT PRIMARY KEY AUTO_INCREMENT	 
title	VARCHAR(50)	 
author_id	INT 	внешний ключ:
главная таблица author,
связанный столбец author.author_id,
пустое значение не допускается
price	DECIMAL(8, 2)	 
amount	INT	 
Запрос:

CREATE TABLE book (
    book_id INT PRIMARY KEY AUTO_INCREMENT, 
    title VARCHAR(50), 
    author_id INT NOT NULL, 
    price DECIMAL(8,2), 
    amount INT, 
    FOREIGN KEY (author_id)  REFERENCES author (author_id) 
);

Действия при удалении записи главной таблицы
С помощью выражения ON DELETE можно установить действия, которые выполняются для записей подчиненной таблицы при 
удалении связанной строки из главной таблицы. При удалении можно установить следующие опции:

CASCADE: автоматически удаляет строки из зависимой таблицы при удалении  связанных строк в главной таблице.
SET NULL: при удалении  связанной строки из главной таблицы устанавливает для столбца внешнего ключа значение NULL. 
(В этом случае столбец внешнего ключа должен поддерживать установку NULL).
SET DEFAULT похоже на SET NULL за тем исключением, что значение  внешнего ключа устанавливается не в NULL, а в значение по умолчанию для данного столбца.
RESTRICT: отклоняет удаление строк в главной таблице при наличии связанных строк в зависимой таблице.
Важно! Если для столбца установлена опция SET NULL, то при его описании нельзя задать ограничение на пустое значение.

Пример
Будем считать, что при удалении автора из таблицы author, необходимо удалить все записи о книгах из таблицы book, 
написанные этим автором. Данное действие необходимо прописать при создании таблицы.
Запрос:
CREATE TABLE book (
    book_id INT PRIMARY KEY AUTO_INCREMENT, 
    title VARCHAR(50), 
    author_id INT NOT NULL, 
    price DECIMAL(8,2), 
    amount INT, 
    FOREIGN KEY (author_id)  REFERENCES author (author_id) ON DELETE CASCADE
);


