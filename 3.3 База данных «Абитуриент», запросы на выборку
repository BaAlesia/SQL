Задание 1:
Вывести абитуриентов, которые хотят поступать на образовательную программу «Мехатроника и робототехника» в отсортированном по фамилиям виде.

Решение:
SELECT name_enrollee
FROM enrollee
INNER JOIN program_enrollee USING(enrollee_id)
INNER JOIN program USING(program_id)
WHERE name_program = 'Мехатроника и робототехника'
ORDER BY name_enrollee;

Задание 2:
Вывести образовательные программы, на которые для поступления необходим предмет «Информатика». Программы отсортировать в обратном алфавитном порядке.

Решение:
SELECT name_program
FROM program
INNER JOIN program_subject USING(program_id)
INNER JOIN subject USING(subject_id)
WHERE name_subject = 'Информатика'
ORDER BY 1 DESC;

Задание 3:
Выведите количество абитуриентов, сдавших ЕГЭ по каждому предмету, максимальное, минимальное и среднее значение баллов по предмету ЕГЭ. 
Вычисляемые столбцы назвать Количество, Максимум, Минимум, Среднее. Информацию отсортировать по названию предмета в алфавитном порядке, 
среднее значение округлить до одного знака после запятой.

Решение:
SELECT name_subject, COUNT(enrollee_id) AS Количество, MAX(result) AS Максимум, MIN(result) AS Минимум,    ROUND(AVG(result),1) AS Среднее
FROM subject
JOIN enrollee_subject USING(subject_id)
GROUP BY 1
ORDER BY 1;

Задание 4:
Вывести образовательные программы, для которых минимальный балл ЕГЭ по каждому предмету больше или равен 40 баллам. 
Программы вывести в отсортированном по алфавиту виде.

Решение:
SELECT name_program
FROM program
JOIN program_subject USING(program_id)
GROUP BY 1
HAVING MIN(min_result) >=40
ORDER BY 1;

Задание 5:
Вывести образовательные программы, которые имеют самый большой план набора,  вместе с этой величиной.

Решение:
SELECT name_program, plan
FROM program
WHERE plan = (SELECT MAX(plan) FROM program);

Задание 6:
Посчитать, сколько дополнительных баллов получит каждый абитуриент. Столбец с дополнительными баллами назвать Бонус. 
Информацию вывести в отсортированном по фамилиям виде.

Решение:
SELECT name_enrollee, IFNULL( SUM(bonus), 0) AS Бонус
FROM enrollee
    LEFT JOIN enrollee_achievement USING(enrollee_id)
    LEFT JOIN achievement USING(achievement_id)
GROUP BY name_enrollee
ORDER BY 1;

Задание 7:
Выведите сколько человек подало заявление на каждую образовательную программу и конкурс на нее (число поданных заявлений деленное на количество мест по плану), 
округленный до 2-х знаков после запятой. В запросе вывести название факультета, к которому относится образовательная программа, 
название образовательной программы, план набора абитуриентов на образовательную программу (plan), количество поданных заявлений (Количество) и Конкурс.
Информацию отсортировать в порядке убывания конкурса.

Решение:
SELECT name_department, name_program, plan, Количество, ROUND(Количество/plan, 2) AS Конкурс
FROM department
    INNER JOIN program USING(department_id)
    INNER JOIN 
            (SELECT program_id, COUNT(enrollee_id) AS Количество
            FROM  program_enrollee
            GROUP BY program_id) AS temp USING(program_id)
ORDER BY Конкурс DESC;

Задание 8:
Вывести образовательные программы, на которые для поступления необходимы предмет «Информатика» и «Математика» в отсортированном по названию программ виде.

Решение:
SELECT name_program
FROM program
    INNER JOIN program_subject USING(program_id)
    INNER JOIN subject USING(subject_id)
    WHERE name_subject IN ("Информатика", "Математика") 
GROUP BY name_program
HAVING COUNT(name_program) = 2
ORDER BY name_program ASC;

