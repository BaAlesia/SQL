Задание 1:
Вывести абитуриентов, которые хотят поступать на образовательную программу «Мехатроника и робототехника» в отсортированном по фамилиям виде.

Решение:
SELECT name_enrollee
FROM enrollee
INNER JOIN program_enrollee USING(enrollee_id)
INNER JOIN program USING(program_id)
WHERE name_program = 'Мехатроника и робототехника'
ORDER BY name_enrollee;

Задание 2:
Вывести образовательные программы, на которые для поступления необходим предмет «Информатика». Программы отсортировать в обратном алфавитном порядке.

Решение:
SELECT name_program
FROM program
INNER JOIN program_subject USING(program_id)
INNER JOIN subject USING(subject_id)
WHERE name_subject = 'Информатика'
ORDER BY 1 DESC;

Задание 3:
Выведите количество абитуриентов, сдавших ЕГЭ по каждому предмету, максимальное, минимальное и среднее значение баллов по предмету ЕГЭ. 
Вычисляемые столбцы назвать Количество, Максимум, Минимум, Среднее. Информацию отсортировать по названию предмета в алфавитном порядке, 
среднее значение округлить до одного знака после запятой.

Решение:
SELECT name_subject, COUNT(enrollee_id) AS Количество, MAX(result) AS Максимум, MIN(result) AS Минимум,    ROUND(AVG(result),1) AS Среднее
FROM subject
JOIN enrollee_subject USING(subject_id)
GROUP BY 1
ORDER BY 1;

Задание 4:
Вывести образовательные программы, для которых минимальный балл ЕГЭ по каждому предмету больше или равен 40 баллам. 
Программы вывести в отсортированном по алфавиту виде.

Решение:
SELECT name_program
FROM program
JOIN program_subject USING(program_id)
GROUP BY 1
HAVING MIN(min_result) >=40
ORDER BY 1;

Задание 5:
Вывести образовательные программы, которые имеют самый большой план набора,  вместе с этой величиной.

Решение:
SELECT name_program, plan
FROM program
WHERE plan = (SELECT MAX(plan) FROM program);

Задание 6:
Посчитать, сколько дополнительных баллов получит каждый абитуриент. Столбец с дополнительными баллами назвать Бонус. 
Информацию вывести в отсортированном по фамилиям виде.

Решение:
SELECT name_enrollee, IFNULL( SUM(bonus), 0) AS Бонус
FROM enrollee
    LEFT JOIN enrollee_achievement USING(enrollee_id)
    LEFT JOIN achievement USING(achievement_id)
GROUP BY name_enrollee
ORDER BY 1;

Задание 7:
Выведите сколько человек подало заявление на каждую образовательную программу и конкурс на нее (число поданных заявлений деленное на количество мест по плану), 
округленный до 2-х знаков после запятой. В запросе вывести название факультета, к которому относится образовательная программа, 
название образовательной программы, план набора абитуриентов на образовательную программу (plan), количество поданных заявлений (Количество) и Конкурс.
Информацию отсортировать в порядке убывания конкурса.

Решение:
SELECT name_department, name_program, plan, Количество, ROUND(Количество/plan, 2) AS Конкурс
FROM department
    INNER JOIN program USING(department_id)
    INNER JOIN 
            (SELECT program_id, COUNT(enrollee_id) AS Количество
            FROM  program_enrollee
            GROUP BY program_id) AS temp USING(program_id)
ORDER BY Конкурс DESC;

Задание 8:
Вывести образовательные программы, на которые для поступления необходимы предмет «Информатика» и «Математика» в отсортированном по названию программ виде.

Решение:
SELECT name_program
FROM program
    INNER JOIN program_subject USING(program_id)
    INNER JOIN subject USING(subject_id)
    WHERE name_subject IN ("Информатика", "Математика") 
GROUP BY name_program
HAVING COUNT(name_program) = 2
ORDER BY name_program ASC;

Задание 9:
Посчитать количество баллов каждого абитуриента на каждую образовательную программу, на которую он подал заявление, по результатам ЕГЭ. 
В результат включить название образовательной программы, фамилию и имя абитуриента, а также столбец с суммой баллов, который назвать itog. 
Информацию вывести в отсортированном сначала по образовательной программе, а потом по убыванию суммы баллов виде.

Решение:
SELECT program.name_program, enrollee.name_enrollee, SUM(enrollee_subject.result) AS itog
FROM enrollee
INNER JOIN program_enrollee USING(enrollee_id)
INNER JOIN program USING(program_id)
INNER JOIN program_subject USING(program_id)
INNER JOIN subject USING(subject_id)
INNER JOIN enrollee_subject ON subject.subject_id = enrollee_subject.subject_id 
AND enrollee_subject.enrollee_id = enrollee.enrollee_id
GROUP BY name_enrollee, name_program
ORDER BY name_program ASC, itog DESC;

Задание 10:
Вывести название образовательной программы и фамилию тех абитуриентов, которые подавали документы на эту образовательную программу, 
но не могут быть зачислены на нее. Эти абитуриенты имеют результат по одному или нескольким предметам ЕГЭ, необходимым для поступления на эту 
образовательную программу, меньше минимального балла. Информацию вывести в отсортированном сначала по программам, а потом по фамилиям абитуриентов виде.
Например, Баранов Павел по «Физике» набрал 41 балл, а  для образовательной программы «Прикладная механика» минимальный балл 
по этому предмету определен в 45 баллов. Следовательно, абитуриент на данную программу не может поступить.

Решение:
SELECT name_program,name_enrollee
FROM enrollee
JOIN program_enrollee USING (enrollee_id)
JOIN program USING (program_id)
JOIN program_subject USING (program_id)
JOIN enrollee_subject USING (subject_id,enrollee_id)
WHERE result < min_result
GROUP BY 1, 2
ORDER BY 1, 2;
