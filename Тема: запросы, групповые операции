Выбор уникальных элементов столбца
Чтобы отобрать уникальные элементы некоторого столбца используется ключевое слово DISTINCT, которое размещается сразу после SELECT.

Пример
Выбрать различных авторов, книги которых хранятся в таблице book.

Запрос:
SELECT DISTINCT author
FROM book;

DISTINCT работает с данными из столбца, пишется после SELECT;

GROUP BY работает с данными из строк целевого столбца, пишется после FROM.

Выборка данных, групповые функции SUM и COUNT
При группировке над элементами столбца, входящими в группу можно выполнить различные действия, например, просуммировать их или найти количество элементов в группе.

Подробно рассмотрим, как осуществляется группировка данных по некоторому столбцу и вычисления над группой на следующем примере:

SELECT author, sum(amount), count(amount)
FROM book
GROUP BY author;
1. В таблице book определяются строки, в которых в столбце author одинаковые значения:

Получили 3 различные группы:

группа I объединяет две записи, у которых в столбце author значение Булгаков М.А.;
группа II объединяет три записи, у которых в столбце author значение Достоевский Ф.М.;
группа III объединяет одну запись, у которой в столбце author значение Есенин С.А.
2. Вместо каждой группы в результирующий запрос включается  одна запись. Запись как минимум включает значение столбца, 
по которому осуществляется группировка (в нашем случае это author):
3. Дальше можно выполнить вычисления над элементами КАЖДОЙ группы в отдельности, например, посчитать общее количество экземпляров книг 
каждого автора. Для этого используется групповая функция SUM(), а в скобках указывается столбец, по которому нужно выполнить суммирование ( в нашем случае amount):

4. Также можно посчитать, сколько записей относится к группе. Для этого используется функция COUNT(), в скобках можно указать ЛЮБОЙ столбец из группы, 
если группа не содержит пустых значений (ниже приведен пример, в котором показано, 
как работает COUNT(), если в группе есть пустые значения):

Выборка данных, групповые функции MIN, MAX и AVG
К групповым функциям SQL относятся: MIN(), MAX() и AVG(), которые вычисляют минимальное, максимальное и среднее значение элементов столбца, относящихся к группе.

Пример
Вывести минимальную цену книги каждого автора

Запрос:
SELECT author, MIN(price) AS min_price
FROM book
GROUP BY author;
Выборка данных c вычислением, групповые функции
В качестве аргумента групповых функций  SQL может использоваться не только столбец, но и любое допустимое в SQL арифметическое выражение.

Пример
Вывести суммарную стоимость книг каждого автора.

Запрос:
SELECT author, SUM(price * amount) AS Стоимость
FROM book
GROUP BY author;

Вычисления по таблице целиком
Групповые функции позволяют вычислять итоговые значения по всей таблице. Например, можно посчитать общее количество книг на складе, вычислить суммарную стоимость и пр. Для этого после ключевого слова SELECT указывается групповая функция для выражения или имени столбца, а ключевые слова GROUP BY опускаются.

Пример
Посчитать количество экземпляров книг на складе.

Запрос:
SELECT SUM(amount) AS Количество
FROM book;

Выборка данных по условию, групповые функции
В запросы с групповыми функциями можно включать условие отбора строк, которое в обычных запросах записывается после WHERE. В запросах с групповыми функциями вместо WHERE используется ключевое слово HAVING , которое размещается после оператора GROUP BY.

Пример
Найти минимальную и максимальную цену книг всех авторов, общая стоимость книг которых больше 5000.

Запрос:
SELECT author,
    MIN(price) AS Минимальная_цена, 
    MAX(price) AS Максимальная_цена
FROM book
GROUP BY author
HAVING SUM(price * amount) > 5000; 

Выборка данных по условию, групповые функции, WHERE и HAVING
Для этого урока теоретическая часть подготовлена Alexandra Klinnikova, спасибо большое!

WHERE и HAVING могут использоваться в одном запросе. При этом необходимо учитывать порядок выполнения  SQL запроса на выборку на СЕРВЕРЕ:

FROM
WHERE
GROUP BY
HAVING
SELECT
ORDER BY
Сначала определяется таблица, из которой выбираются данные (FROM), затем из этой таблицы отбираются записи в соответствии с условием  WHERE, 
выбранные данные агрегируются (GROUP BY),  из агрегированных записей выбираются те, которые удовлетворяют условию после HAVING. Потом формируются 
данные результирующей выборки, как это указано после SELECT ( вычисляются выражения, присваиваются имена и пр. ). Результирующая выборка сортируется, 
как указано после ORDER BY.
Важно! Порядок ВЫПОЛНЕНИЯ запросов - это не порядок ЗАПИСИ ключевых слов в запросе на выборку. Порядок записи (синтаксис запроса) 
остается таким же, как рассматривался ранее в курсе. Порядок ВЫПОЛНЕНИЯ  нужен для того, чтобы понять, почему, например, в WHERE нельзя
использовать имена выражений из SELECT. Просто SELECT выполняется компилятором позже, чем WHERE, поэтому ему неизвестно, какое там выражение написано.

Пример
Вывести максимальную и минимальную цену книг каждого автора, кроме Есенина, количество экземпляров книг которого больше 10. 

SELECT author,
    MIN(price) AS Минимальная_цена,
    MAX(price) AS Максимальная_цена
FROM book
WHERE author <> 'Есенин С.А.'
GROUP BY author
HAVING SUM(amount) > 10;
